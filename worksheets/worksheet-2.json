{
  "id": "worksheet-2",
  "title": "Worksheet 2: Variables and Basic Math",
  "description": "Learn how to use variables and do simple math in Python",
  "problems": [
    {
      "id": "2.1",
      "title": "What are Variables?",
      "content": "Variables are like boxes that store information. You can create them and use them in your programs!",
      "example": "name = \"Alice\"\nprint(name)",
      "task": "Run the example code to see how variables work.",
      "starterCode": "name = \"Alice\"\nprint(name)",
      "expectedOutput": "Alice",
      "hint": "Variables store values that you can use later!",
      "validation": {
        "type": "exact_match",
        "rules": [
          {
            "type": "code_contains",
            "pattern": "name = \"Alice\"",
            "description": "Code must contain the variable assignment"
          },
          {
            "type": "code_contains",
            "pattern": "print(name)",
            "description": "Code must contain print(name)"
          },
          {
            "type": "output_contains",
            "pattern": "Alice",
            "description": "Output must contain 'Alice'"
          }
        ]
      }
    },
    {
      "id": "2.2",
      "title": "Create Your Own Variable",
      "content": "Now create a variable with your favorite animal!",
      "task": "Create a variable called 'animal' with your favorite animal, then print it",
      "starterCode": "# Create a variable called 'animal'\n\n# Print the animal\n",
      "expectedOutput": "[any animal name]",
      "hint": "Use the format: variable_name = \"value\"",
      "validation": {
        "type": "pattern_match",
        "rules": [
          {
            "type": "code_contains",
            "pattern": "animal =",
            "description": "Code must create a variable called 'animal'"
          },
          {
            "type": "code_contains",
            "pattern": "print(animal)",
            "description": "Code must print the animal variable"
          },
          {
            "type": "output_not_empty",
            "description": "Output must not be empty"
          },
          {
            "type": "no_errors",
            "description": "Code must not produce errors"
          }
        ]
      }
    },
    {
      "id": "2.3",
      "title": "Number Variables",
      "content": "Variables can store numbers too!",
      "task": "Create a variable called 'age' with your age (as a number), then print it",
      "starterCode": "# Create a variable for your age\n\n# Print your age\n",
      "expectedOutput": "[age number]",
      "hint": "Numbers don't need quotes!",
      "validation": {
        "type": "pattern_match",
        "rules": [
          {
            "type": "code_contains",
            "pattern": "age =",
            "description": "Code must create a variable called 'age'"
          },
          {
            "type": "code_contains",
            "pattern": "print(age)",
            "description": "Code must print the age variable"
          },
          {
            "type": "code_contains_number",
            "pattern": "age\\s*=\\s*\\d+",
            "description": "Age must be assigned a number value"
          },
          {
            "type": "output_is_number",
            "description": "Output must be a number"
          }
        ]
      }
    },
    {
      "id": "2.4",
      "title": "Simple Math",
      "content": "Python can do math! Try adding two numbers.",
      "task": "Create two variables with numbers, then add them together and print the result",
      "starterCode": "# Create two number variables\n\n# Add them together and print\n",
      "expectedOutput": "[sum of the two numbers]",
      "hint": "Use the + symbol to add numbers",
      "validation": {
        "type": "pattern_match",
        "rules": [
          {
            "type": "code_contains",
            "pattern": "=",
            "description": "Code must contain variable assignments"
          },
          {
            "type": "code_contains",
            "pattern": "+",
            "description": "Code must contain addition operation"
          },
          {
            "type": "code_contains",
            "pattern": "print",
            "description": "Code must contain a print statement"
          },
          {
            "type": "output_not_empty",
            "description": "Output must not be empty"
          },
          {
            "type": "code_min_length",
            "minLength": 20,
            "description": "Code must be substantial"
          }
        ]
      }
    },
    {
      "id": "2.5",
      "title": "Math Challenge",
      "content": "Let's do some more math!",
      "task": "Create variables for:\n1. Your age\n2. Your friend's age\n3. Print both ages and their sum",
      "starterCode": "# Your age\n\n# Your friend's age\n\n# Print both ages\n\n# Print the sum\n",
      "expectedOutput": "[your age]\n[friend's age]\n[sum]",
      "hint": "Use multiple print statements to show each piece of information",
      "validation": {
        "type": "pattern_match",
        "rules": [
          {
            "type": "assignment_count",
            "minCount": 2,
            "description": "Must have at least 2 variable assignments"
          },
          {
            "type": "code_contains",
            "pattern": "print",
            "description": "Code must contain print statements"
          },
          {
            "type": "output_line_count",
            "minLines": 3,
            "description": "Output must have at least 3 lines"
          },
          {
            "type": "code_min_length",
            "minLength": 25,
            "description": "Code must be substantial"
          }
        ]
      }
    }
  ],
  "metadata": {
    "created": "2025-01-27",
    "author": "Teacher"
  }
}