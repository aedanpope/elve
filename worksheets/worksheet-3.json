{
  "id": "worksheet-3",
  "title": "Worksheet 3: Getting User Input",
  "description": "Learn how to ask users for information and make interactive programs",
  "problems": [
    {
      "id": "3.1",
      "title": "What is input()?",
      "content": "The <code>input()</code> function asks the user to type something and gives it back to your program!",
      "example": "name = input(\"What is your name? \")\nprint(\"Hello, \" + name)",
      "task": "Run the example code and type your name when asked.",
      "starterCode": "name = input(\"What is your name? \")\nprint(\"Hello, \" + name)",
      "expectedOutput": "What is your name? [user types name]\nHello, [name]",
      "hint": "The input() function waits for you to type something and press Enter!",
      "validation": {
        "type": "exact_match",
        "rules": [
          {
            "type": "code_contains",
            "pattern": "input(",
            "description": "Code must contain input() function"
          },
          {
            "type": "code_contains",
            "pattern": "print(",
            "description": "Code must contain print() function"
          },
          {
            "type": "output_contains",
            "pattern": "Hello,",
            "description": "Output must contain 'Hello,'"
          }
        ]
      }
    },
    {
      "id": "3.2",
      "title": "Ask for a Color",
      "content": "Now ask the user for their favorite color!",
      "task": "Ask the user for their favorite color and then print \"I like [color] too!\"",
      "starterCode": "# Ask for favorite color\n\n# Print a message using their color\n",
      "expectedOutput": "What is your favorite color? [user types color]\nI like [color] too!",
      "hint": "Use input() to get the color, then use + to combine it with your message",
      "validation": {
        "type": "pattern_match",
        "rules": [
          {
            "type": "code_contains",
            "pattern": "input(",
            "description": "Code must contain input() function"
          },
          {
            "type": "code_contains",
            "pattern": "I like",
            "description": "Code must contain 'I like' in the print statement"
          },
          {
            "type": "output_contains",
            "pattern": "I like",
            "description": "Output must contain 'I like'"
          },
          {
            "type": "code_min_length",
            "minLength": 25,
            "description": "Code must be substantial"
          }
        ]
      }
    },
    {
      "id": "3.3",
      "title": "Number Input",
      "content": "You can also ask for numbers!",
      "task": "Ask the user for their age, then print \"You are [age] years old\"",
      "starterCode": "# Ask for age\n\n# Print their age\n",
      "expectedOutput": "How old are you? [user types age]\nYou are [age] years old",
      "hint": "input() always gives you text, even for numbers",
      "validation": {
        "type": "pattern_match",
        "rules": [
          {
            "type": "code_contains",
            "pattern": "input(",
            "description": "Code must contain input() function"
          },
          {
            "type": "code_contains",
            "pattern": "years old",
            "description": "Code must contain 'years old' in the print statement"
          },
          {
            "type": "output_contains",
            "pattern": "years old",
            "description": "Output must contain 'years old'"
          },
          {
            "type": "code_min_length",
            "minLength": 20,
            "description": "Code must be substantial"
          }
        ]
      }
    },
    {
      "id": "3.4",
      "title": "Simple Calculator",
      "content": "Let's make a simple calculator!",
      "task": "Ask for two numbers and add them together",
      "starterCode": "# Ask for first number\n\n# Ask for second number\n\n# Convert to numbers and add\n\n# Print the result\n",
      "expectedOutput": "Enter first number: [number1]\nEnter second number: [number2]\nThe sum is: [sum]",
      "hint": "Use int() to convert text to a number: int(input())",
      "validation": {
        "type": "pattern_match",
        "rules": [
          {
            "type": "code_contains",
            "pattern": "input(",
            "description": "Code must contain input() function"
          },
          {
            "type": "code_contains",
            "pattern": "int(",
            "description": "Code must contain int() conversion"
          },
          {
            "type": "code_contains",
            "pattern": "+",
            "description": "Code must contain addition operation"
          },
          {
            "type": "output_contains",
            "pattern": "sum",
            "description": "Output must contain 'sum'"
          },
          {
            "type": "code_min_length",
            "minLength": 30,
            "description": "Code must be substantial"
          }
        ]
      }
    },
    {
      "id": "3.5",
      "title": "Personal Information Form",
      "content": "Create a program that collects personal information!",
      "task": "Ask for:\n1. Name\n2. Age\n3. Favorite food\nThen print a summary",
      "starterCode": "# Ask for name\n\n# Ask for age\n\n# Ask for favorite food\n\n# Print a summary\n",
      "expectedOutput": "What is your name? [name]\nHow old are you? [age]\nWhat is your favorite food? [food]\n\nHello [name]! You are [age] years old and love [food]!",
      "hint": "Use multiple input() calls and combine all the information in your final print",
      "validation": {
        "type": "pattern_match",
        "rules": [
          {
            "type": "input_count",
            "minCount": 3,
            "description": "Must have at least 3 input() calls"
          },
          {
            "type": "output_contains",
            "pattern": "Hello",
            "description": "Output must contain 'Hello'"
          },
          {
            "type": "output_contains",
            "pattern": "years old",
            "description": "Output must contain 'years old'"
          },
          {
            "type": "output_contains",
            "pattern": "love",
            "description": "Output must contain 'love'"
          },
          {
            "type": "code_min_length",
            "minLength": 40,
            "description": "Code must be substantial"
          }
        ]
      }
    }
  ],
  "metadata": {
    "created": "2025-01-27",
    "author": "Teacher"
  }
}